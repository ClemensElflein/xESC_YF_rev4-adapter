name: CI

on:
  push:
    paths-ignore:
      - "**.md"

jobs:

  erc-drc-checks:
    runs-on: ubuntu-latest
    if: github.ref_type != 'tag'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: INTI-CMNB/KiBot@v2_k8
        with:
          config: PCB/xESC_YF_r4.kibot.yaml
          board: PCB/xESC_YF_r4.kicad_pcb
          verbose: 1

  firmware:
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/modm-ext/modm-build-cortex-m:2023-03-12
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Fix Git permission/ownership problem
        run: |
          git config --global --add safe.directory /__w/modm/modm
      - name: Update lbuild
        run: |
          pip3 install --upgrade --upgrade-strategy=eager modm
      - name: Run lbuild
        run: |
          cd firmware/src
          lbuild build
      - name: Compile firmware
        run: |
          cd firmware/src
          scons build bin
      - name: Copy Artifacts
        run: |
          mkdir artifacts/
          cp firmware/build/scons-release/xESC_YF_rev4-Firmware.elf ./artifacts/firmware_xesc_yf_rev4.elf
          cp firmware/build/scons-release/xESC_YF_rev4-Firmware.bin ./artifacts/firmware_xesc_yf_rev4.bin
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Firmware-xESC-YardForce-Rev4
          path: artifacts/

  tagged-release:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' && startsWith(github.ref_name, 'v')
    needs: firmware

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: INTI-CMNB/KiBot@v2_k8
        with:
          config: PCB/xESC_YF_r4.kibot.yaml
          board: PCB/xESC_YF_r4.kicad_pcb

      - name: 'Fix permissions on release/'
        run: sudo chmod 0777 release

      - uses: actions/download-artifact@v4
        with:
          name: Firmware-xESC-YardForce-Rev4
          path: firmware

      - name: Create firmware zip
        run: zip -r release/firmware_xesc-yf-rev4.zip firmware

      - name: Calculating checksum
        shell: bash
        run: |
          sha256sum release/firmware_xesc-yf-rev4.zip > release/firmware_xesc-yf-rev4.sha256

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: release/*

      - name: Deploy release
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: release
          destination_dir: release

      - name: Deploy release_navigator
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: release_navigator
          destination_dir: release_navigator
          keep_files: true

      - name: Deploy release_navigator index
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: release_navigator
          keep_files: true

  pre-release-latest-firmware:
    runs-on: ubuntu-latest
    if: github.ref_type != 'tag'
    needs: firmware
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v4
        with:
          name: Firmware-xESC-YardForce-Rev4
          path: firmware

      - name: Create firmware zip
        run: zip -r firmware_xesc-yf-rev4.zip firmware

      - name: Calculating checksum
        shell: bash
        run: |
          sha256sum firmware_xesc-yf-rev4.zip > firmware_xesc-yf-rev4.sha256

      - uses: "marvinpinto/action-automatic-releases@latest"
        if: github.event_name != 'pull_request'
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          title: "Latest Firmware"
          automatic_release_tag: "latest"
          prerelease: true
          files: firmware_xesc-yf-rev4.{sha256,zip}
